"""Add email verification and password reset fields

Revision ID: 4cdffca651de
Revises: 
Create Date: 2025-03-13 10:32:42.892624

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4cdffca651de'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('blog_post')
    with op.batch_alter_table('routine', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               nullable=True)

    with op.batch_alter_table('routine_skills', schema=None) as batch_op:
        batch_op.alter_column('routine_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('skill_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('position',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('skill', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('event',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=50),
               existing_nullable=False)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('email_verified', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('email_verification_token', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('email_verification_sent_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('password_reset_token', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('password_reset_expires_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('password_hash',
               existing_type=sa.VARCHAR(length=120),
               type_=sa.String(length=256),
               existing_nullable=False)
        batch_op.create_unique_constraint(None, ['email_verification_token'])
        batch_op.create_unique_constraint(None, ['password_reset_token'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('password_hash',
               existing_type=sa.String(length=256),
               type_=sa.VARCHAR(length=120),
               existing_nullable=False)
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('password_reset_expires_at')
        batch_op.drop_column('password_reset_token')
        batch_op.drop_column('email_verification_sent_at')
        batch_op.drop_column('email_verification_token')
        batch_op.drop_column('email_verified')

    with op.batch_alter_table('skill', schema=None) as batch_op:
        batch_op.alter_column('event',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=200),
               existing_nullable=False)

    with op.batch_alter_table('routine_skills', schema=None) as batch_op:
        batch_op.alter_column('position',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('skill_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('routine_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('routine', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               nullable=False)

    op.create_table('blog_post',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='blog_post_pkey')
    )
    # ### end Alembic commands ###
